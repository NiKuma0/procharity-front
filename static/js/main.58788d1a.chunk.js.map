{"version":3,"sources":["pages/AuthForm/AuthForm.styles.ts","pages/AuthForm/AuthForm.tsx","components/NavigationItems/NavigationItems.tsx","components/Header/Header.tsx","components/Chart/Chart.tsx","components/ActionsStats/Actions.styles.ts","components/ActionsStats/Actions.tsx","components/UserStats/Users.tsx","pages/Dashboard/Dashboard.tsx","pages/RegisterForm/RegisterForm.styles.ts","pages/RegisterForm/RegisterForm.tsx","pages/ResetPassword/ResetPassword.tsx","test.ts","hooks/useLocalStorage.ts","pages/RichTextEditor/RichTextEditor.style.ts","pages/RichTextEditor/RichTextEditor.tsx","App.styles.ts","pages/Invite/Invite.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/StatusLabel/StatusLabel.style.ts","components/StatusLabel/StatusLabel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","authForm","display","maxWidth","margin","flexDirection","border","padding","width","gap","alignItems","authFormError","position","top","statusInfo","invite","marginTop","placeItems","authFormInputContainer","marginBottom","authFormSubmitContainer","justifyContent","authFormButtonContainer","authFormButton","cursor","minHeight","backgroundPosition","background","palette","secondary","main","authFormInput","backgroundColor","paper","filter","borderRadius","color","text","primary","schema","yup","shape","email","required","password","min","AuthForm","onLogin","useForm","resolver","yupResolver","mode","handleSubmit","control","formState","errors","classes","isValid","onSubmit","data","a","className","name","defaultValue","render","field","TextField","label","error","Boolean","message","helperText","size","variant","type","Link","component","RouterLink","to","Button","MainListItems","history","useHistory","ListItem","button","onClick","push","ListItemIcon","ListItemText","SecondaryListItems","handleLogout","root","toolbar","paddingRight","drawerPosition","left","height","flexShrink","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","richTextEditor","fixedHeight","authFormTitle","textAlign","fontSize","lineHeight","headerContainer","buttonThemeContainer","right","Header","handleDrawerOpen","handleDrawerClose","isMenuOpen","handleSetTheme","isDark","removeToken","matchLogin","useRouteMatch","isExact","matchRegister","matchReset","IconButton","AppBar","clsx","Toolbar","edge","aria-label","Drawer","open","Divider","List","Chart","useTheme","chartData","Object","keys","added_users","reduce","previousValue","currentValue","amount","newObject","time","parse","Date","locale","ru","toISOString","Typography","ResponsiveContainer","LineChart","bottom","CartesianGrid","strokeDasharray","XAxis","tickFormatter","value","index","dateObj","getDate","dataKey","stroke","Tooltip","labelFormatter","lab","payload","db","Intl","DateTimeFormat","day","month","year","format","formatter","props","wrapperStyle","YAxis","allowDecimals","Label","angle","style","textAnchor","fill","Line","light","dot","table","Actions","actionsStats","stats","command_stats","Table","TableHead","TableRow","TableCell","align","TableBody","map","actionName","depositContext","flex","Users","date","now","Dashboard","userStats","fetchUserStats","useState","setOpen","errorMessage","useEffect","Container","Collapse","in","Alert","severity","action","Grid","item","xs","md","lg","Paper","active_users","deactivated_users","borderColor","transitionDelay","last_name","first_name","paramsSchema","id","uuid","RegisterForm","params","useParams","ky","post","process","json","token","handleTokenValidity","validate","catch","fullWidth","ResetPassword","themeLight","themeDark","default","divider","info","disabled","useLocalStorage","key","initialValue","window","localStorage","getItem","JSON","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","form","quill","modules","clipboard","matchVisual","RichTextEditor","preserveWhitespace","match","contentShift","easeOut","drawerWidth","Invite","ProtectedRoute","path","condition","status","StatusLabel","handleCloseError","isError","statusMessage","App","themeColor","setThemeColor","userToken","setUserToken","refreshToken","setRefreshToken","openError","setErrorOpen","setLoading","setError","setErrorMessage","usersStats","setUsersStats","getRefreshedToken","fetch","method","headers","Authorization","responseToken","refreshedToken","getUsers","response","userData","Error","onInvite","body","Accept","result","throwHttpErrors","access_token","refresh_token","onResetPassword","onSubmitMessage","stripTags","replace","replaceEnclosedTag","normalizedData","retry","limit","methods","statusCodes","hooks","afterResponse","request","options","resp","set","onRegister","React","setMenuOpen","themeOptions","useMemo","createMuiTheme","overrides","MuiFormHelperText","contained","MuiOutlinedInput","input","notchedOutline","MuiButton","MuiSvgIcon","MuiTextField","MuiContainer","paddingLeft","maxWidthLg","MuiCssBaseline","ThemeProvider","CssBaseline","exact","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58788d1a.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  authForm: {\n    display: 'flex',\n    maxWidth: '314px',\n    margin: '60px 0 0 0',\n    flexDirection: 'column',\n    border: 'none',\n    padding: '0',\n    width: '288px',\n    gap: 20,\n    alignItems: 'center',\n  },\n  authFormError: {\n    position: 'absolute',\n    top: 70,\n  },\n  statusInfo: {\n    position: 'absolute',\n    top: 70,\n  },\n  invite: {\n    display: 'grid',\n    marginTop: '20',\n    width: '100%',\n    placeItems: 'center',\n  },\n  authFormInputContainer: {\n    position: 'relative',\n    marginBottom: '16px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 35,\n    width: '100%',\n    border: 'none',\n  },\n\n  authFormSubmitContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    position: 'relative',\n    width: '100%',\n  },\n\n  authFormButtonContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n\n  authFormButton: {\n    cursor: 'pointer',\n    width: '120px',\n    minHeight: '44px',\n    backgroundPosition: 'center',\n    background: theme.palette.secondary.main,\n    border: 'none',\n    padding: '0',\n  },\n\n  authFormInput: {\n    backgroundColor: theme.palette.background.paper,\n    filter: 'none',\n    borderRadius: '4px',\n    color: theme.palette.text.primary,\n    position: 'relative',\n    width: '100%',\n    maxWidth: '288px',\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Controller, useForm } from 'react-hook-form';\nimport { TextField, Button, Link, CircularProgress, IconButton } from '@material-ui/core';\nimport { useHistory, Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\nimport ky, { Options } from 'ky';\nimport { Alert } from '@material-ui/lab';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Collapse from '@material-ui/core/Collapse';\nimport useStyles from './AuthForm.styles';\n\nexport const LinkBehavior = React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((props, ref) => (\n  <RouterLink ref={ref} to=\"/getting-started/installation/\" {...props} />\n));\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Такой e-mail не подойдет').required('Поле e-mail необходимо к заполнению'),\n  password: yup.string().required('Поле пароль необходимо к заполнению').min(8, 'Минимальная длина пароля 8 символов'),\n});\n\nexport interface LoginFormValues extends Options {\n  email: string;\n  password: string;\n}\ninterface AuthFormI {\n  onLogin: (data: LoginFormValues) => Promise<void>;\n}\n\nconst AuthForm: React.FC<AuthFormI> = ({ onLogin }) => {\n  const {\n    handleSubmit,\n    control,\n    formState: { errors, isValid },\n  } = useForm<Pick<LoginFormValues, 'email' | 'password'>>({ resolver: yupResolver(schema), mode: 'onTouched' });\n\n  const classes = useStyles();\n\n  const onSubmit = async (data: LoginFormValues) => {\n    onLogin(data);\n  };\n\n  return (\n    <form className={classes.authForm} onSubmit={handleSubmit(onSubmit)}>\n      <fieldset className={classes.authFormInputContainer}>\n        <Controller\n          name=\"email\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <TextField\n              label=\"E-mail\"\n              error={Boolean(errors.email?.message)}\n              helperText={errors.email?.message}\n              className={classes.authFormInput}\n              size=\"medium\"\n              variant=\"outlined\"\n              {...field}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"password\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <TextField\n              variant=\"outlined\"\n              label=\"Пароль\"\n              error={Boolean(errors.password?.message)}\n              helperText={errors.password?.message}\n              className={classes.authFormInput}\n              type=\"password\"\n              size=\"medium\"\n              {...field}\n            />\n          )}\n        />\n      </fieldset>\n      <Link component={RouterLink} to=\"/reset_password\">\n        Забыли пароль?\n      </Link>\n      <Button className={classes.authFormButton} type=\"submit\">\n        Войти\n      </Button>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SendIcon from '@material-ui/icons/Send';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useHistory } from 'react-router-dom';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\n\nexport const MainListItems = () => {\n  const history = useHistory();\n  return (\n    <div>\n      <ListItem button onClick={() => history.push('/dashboard')}>\n        <ListItemIcon>\n          <BarChartIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Статистика\" />\n      </ListItem>\n      <ListItem button onClick={() => history.push('/send')}>\n        <ListItemIcon>\n          <SendIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Написать Сообщение\" />\n      </ListItem>\n      <ListItem button onClick={() => history.push('/invite')}>\n        <ListItemIcon>\n          <PersonAddIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Пригласить\" />\n      </ListItem>\n    </div>\n  );\n};\n\ninterface SecondaryListItemsProps {\n  handleLogout: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const SecondaryListItems: React.FC<SecondaryListItemsProps> = ({ handleLogout }) => {\n  return (\n    <div>\n      <ListItem onClick={handleLogout} component=\"button\" button>\n        <ListItemIcon>\n          <ExitToAppIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Выйти\" />\n      </ListItem>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { makeStyles, AppBar, Toolbar, IconButton, Drawer, Divider, List } from '@material-ui/core';\nimport clsx from 'clsx';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { MainListItems, SecondaryListItems } from '../NavigationItems/NavigationItems';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n    // keep right padding when drawer closed\n  },\n  drawerPosition: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    height: '100%',\n    flexShrink: 0,\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: {\n    flexGrow: 1,\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n    marginTop: 100,\n    '& .quill': {\n      width: '90%',\n    },\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  richTextEditor: {\n    maxWidth: '60%',\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  authFormTitle: {\n    width: '100%',\n    textAlign: 'center',\n    fontSize: '2rem',\n    lineHeight: '2rem',\n  },\n  headerContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    position: 'relative',\n  },\n  buttonThemeContainer: {\n    paddingRight: 10,\n    position: 'absolute',\n    right: '0',\n  },\n}));\ninterface HeaderProps {\n  handleDrawerOpen: () => void;\n  handleDrawerClose: () => void;\n  handleSetTheme: () => void;\n  removeToken: () => void;\n  isDark: boolean;\n  isMenuOpen: boolean;\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  handleDrawerOpen,\n  handleDrawerClose,\n  isMenuOpen,\n  handleSetTheme,\n  isDark,\n  removeToken,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const matchLogin = useRouteMatch('/')?.isExact ?? false;\n\n  const matchRegister = useRouteMatch('/register/:id')?.isExact ?? false;\n  const matchReset = useRouteMatch('/reset_password')?.isExact ?? false;\n\n  const handleLogout = () => {\n    removeToken();\n    history.push('/');\n  };\n\n  return (\n    <>\n      {!(matchLogin || matchRegister || matchReset) ? (\n        <>\n          <AppBar position=\"absolute\" className={clsx(classes.appBar, isMenuOpen && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"isMenuOpen drawer\"\n                onClick={handleDrawerOpen}\n                className={clsx(classes.menuButton, isMenuOpen && classes.menuButtonHidden)}>\n                <MenuIcon />\n              </IconButton>\n              <div className={classes.appBarSpacer} />\n              <IconButton onClick={handleSetTheme}>{isDark ? <Brightness4Icon /> : <Brightness7Icon />}</IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: clsx(classes.drawerPaper, !isMenuOpen && classes.drawerPaperClose),\n              root: classes.drawerPosition,\n            }}\n            open={isMenuOpen}>\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              <MainListItems />\n            </List>\n            <Divider />\n\n            <List>\n              <SecondaryListItems handleLogout={handleLogout} />\n            </List>\n          </Drawer>\n        </>\n      ) : (\n        <div className={classes.headerContainer}>\n          <h1 className={classes.authFormTitle}>ProCharity</h1>\n          <div className={classes.buttonThemeContainer}>\n            <IconButton onClick={handleSetTheme}>{isDark ? <Brightness4Icon /> : <Brightness7Icon />}</IconButton>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\nexport default Header;\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\nimport parse from 'date-fns/parse';\nimport ru from 'date-fns/locale/ru';\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts';\nimport { UserData } from '../../pages/Dashboard/Dashboard';\n\ninterface ChartProps {\n  data: UserData | null;\n}\ninterface ChartData {\n  time: string;\n  amount: number;\n}\n\nexport default function Chart({ data }: ChartProps) {\n  const theme = useTheme();\n  const chartData: ChartData[] = Object.keys(data?.added_users ?? {}).reduce((previousValue, currentValue) => {\n    const amount = data?.added_users[currentValue] ?? 0;\n    const day = parse(currentValue, 'dd MMMM, yyyy', new Date(), { locale: ru });\n    const dayString = (day.toISOString() as unknown) as string;\n    const newObject = { time: dayString, amount };\n    previousValue.push(newObject);\n    return previousValue;\n  }, [] as ChartData[]);\n  const label = (value: any, name: any, props: any) => {\n    return [value, 'Количество'];\n  };\n  const laa = (lab: any, payload: any) => {\n    if (lab === 0) {\n      return 'date';\n    }\n    const db = new Date(lab);\n    const options: any = { day: 'numeric', month: 'long', year: 'numeric' };\n    const date = new Intl.DateTimeFormat('ru-Ru', options).format(db);\n    return date;\n  };\n\n  return (\n    <>\n      <Typography>Cтатистика пользователей за текущий месяц</Typography>\n      <ResponsiveContainer height={300}>\n        <LineChart\n          data={chartData}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n\n          <XAxis\n            tickFormatter={(value, index: number) => {\n              const dateObj: Date = new Date(value);\n              const day = `${dateObj.getDate()}`;\n              return day;\n            }}\n            dataKey=\"time\"\n            stroke={theme.palette.text.primary}\n          />\n          <Tooltip\n            label=\"дата\"\n            labelFormatter={laa}\n            formatter={label}\n            wrapperStyle={{ width: 300, backgroundColor: '#FFF', color: 'black' }}\n          />\n          <YAxis allowDecimals={false} stroke={theme.palette.text.primary}>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}>\n              Пользователи\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.secondary.light} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </>\n  );\n}\n","import { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  table: {},\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport useStyles from './Actions.styles';\n\ninterface ActionsProps {\n  actionsStats: { [key: string]: number } | undefined;\n}\nconst Actions: React.FC<ActionsProps> = ({ actionsStats }) => {\n  const classes = useStyles();\n  const stats = actionsStats ?? { command_stats: 0 };\n  return (\n    <>\n      <Table className={classes.table} size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Название Команды</TableCell>\n            <TableCell align=\"right\">Количество</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.keys(stats).map((actionName) => (\n            <TableRow key={actionName}>\n              <TableCell>{actionName}</TableCell>\n              <TableCell align=\"right\">{stats[actionName]}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nexport default Actions;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\ninterface UsersProps {\n  text: number;\n  title: string;\n}\nconst Users: React.FC<UsersProps> = ({ text, title }) => {\n  const classes = useStyles();\n  const date = Date.now();\n  const options: any = { day: 'numeric', month: 'long', year: 'numeric' };\n  return (\n    <>\n      <Typography component=\"p\" variant=\"h4\">\n        {text}\n      </Typography>\n      <Typography component=\"p\" variant=\"body1\">\n        {title}\n      </Typography>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.depositContext}>\n        {new Intl.DateTimeFormat('ru-Ru', options).format(date)}\n      </Typography>\n      <div />\n    </>\n  );\n};\n\nexport default Users;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useHistory } from 'react-router-dom';\nimport { Alert } from '@material-ui/lab';\nimport { Collapse, IconButton, CircularProgress } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Chart from '../../components/Chart/Chart';\nimport Actions from '../../components/ActionsStats/Actions';\nimport Users from '../../components/UserStats/Users';\n\nexport interface userStats {\n  time: string;\n  amount: number;\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  authFormError: {\n    position: 'absolute',\n    top: 70,\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    minHeight: 240,\n  },\n}));\nexport interface UserData {\n  active_users: number;\n  deactivated_users: number;\n  added_users: { [key: string]: number };\n  command_stats: {\n    [key: string]: number;\n  };\n}\n\ninterface DashboardProps {\n  userStats: UserData | null;\n  fetchUserStats: () => Promise<void>;\n}\nconst Dashboard: React.FC<DashboardProps> = ({ userStats, fetchUserStats }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  useEffect(() => {\n    fetchUserStats();\n  }, []);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Collapse in={open} className={classes.authFormError}>\n        <Alert\n          severity=\"error\"\n          variant=\"outlined\"\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => {\n                setOpen(false);\n              }}>\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }>\n          {errorMessage}\n        </Alert>\n      </Collapse>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={12} lg={12}>\n          <Paper className={clsx(classes.fixedHeight, classes.paper)}>\n            <Chart data={userStats} />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={4}>\n          <Paper className={classes.paper}>\n            <Users\n              text={(userStats?.active_users ?? 0) + (userStats?.deactivated_users ?? 0)}\n              title=\"Всего Пользователей\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={4}>\n          <Paper className={classes.paper}>\n            <Users text={userStats?.active_users ?? 0} title=\"Активных Пользователей\" />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={4}>\n          <Paper className={classes.paper}>\n            <Users text={userStats?.deactivated_users ?? 0} title=\"Неактивных Пользователей\" />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={12} lg={12}>\n          <Paper className={classes.paper}>\n            <Actions actionsStats={userStats?.command_stats} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  authForm: {\n    display: 'flex',\n    maxWidth: '314px',\n    margin: '60px 0 0 0',\n    flexDirection: 'column',\n    border: 'none',\n    padding: '0',\n    width: '288px',\n    gap: 20,\n    alignItems: 'center',\n  },\n\n  authFormInputContainer: {\n    position: 'relative',\n    marginBottom: '16px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    gap: 35,\n    width: '100%',\n    border: 'none',\n  },\n\n  authFormSubmitContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    position: 'relative',\n    width: '100%',\n  },\n\n  authFormButtonContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n\n  authFormButton: {\n    cursor: 'pointer',\n    width: '100%',\n    maxWidth: '230px',\n    minHeight: '44px',\n    backgroundPosition: 'center',\n    background: theme.palette.secondary.main,\n    border: 'none',\n    padding: '0',\n  },\n\n  authFormInput: {\n    backgroundColor: theme.palette.background.paper,\n    filter: 'none',\n    borderColor: 'transparent',\n    borderRadius: '4px',\n    border: 'none',\n    width: '100%',\n    color: '#ffff',\n    position: 'relative',\n\n    '& input:-webkit-autofill': {\n      '-webkit-box-shadow': `0 0 0px 1000px #4040 inset`,\n      transitionDelay: '9999s',\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Controller, useForm } from 'react-hook-form';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport ky, { Options } from 'ky';\nimport useStyles from './RegisterForm.styles';\n\nconst schema = yup.object().shape({\n  last_name: yup.string().required('Поле e-mail необходимо к заполнению'),\n  first_name: yup.string().required(),\n  password: yup.string().required('Поле пароль необходимо к заполнению').min(8, 'Минимальная длина пароля 8 символов'),\n});\n\nconst paramsSchema = yup.object().shape({\n  id: yup.string().uuid(),\n});\n\nexport interface RegisterFormValues extends Options {\n  first_name: string;\n  last_name: string;\n  password: string;\n}\ninterface RegisterFormProps {\n  onSubmit: (data: RegisterFormValues, params: { id: string }) => Promise<void>;\n}\n\nconst RegisterForm: React.FC<RegisterFormProps> = ({ onSubmit }) => {\n  const history = useHistory();\n  const params = useParams<{ id: string }>();\n\n  useEffect(() => {\n    const handleTokenValidity = async () => {\n      try {\n        const response = await ky.post(`${process.env.REACT_APP_API_ADDRESS}/auth/invitation_checker/`, {\n          json: {\n            token: params.id,\n          },\n        });\n      } catch {\n        history.push('/');\n      }\n    };\n    handleTokenValidity();\n    paramsSchema.validate(params).catch(() => history.push('/'));\n  }, []);\n\n  const {\n    handleSubmit,\n    control,\n    formState: { errors, isValid },\n  } = useForm<Pick<RegisterFormValues, 'first_name' | 'password' | 'last_name'>>({\n    resolver: yupResolver(schema),\n    mode: 'onTouched',\n  });\n  const submitRegisterForm = (data: RegisterFormValues) => {\n    onSubmit(data, params);\n  };\n  const [isPasswordVisible, setPasswordVisible] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <form className={classes.authForm} onSubmit={handleSubmit(submitRegisterForm)}>\n      <fieldset className={classes.authFormInputContainer}>\n        <Controller\n          name=\"first_name\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <TextField\n              label=\"Имя\"\n              fullWidth\n              error={Boolean(errors.first_name?.message)}\n              helperText={errors.first_name?.message}\n              className={classes.authFormInput}\n              size=\"medium\"\n              variant=\"outlined\"\n              {...field}\n            />\n          )}\n        />\n        <Controller\n          name=\"last_name\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <TextField\n              label=\"Фамилия\"\n              error={Boolean(errors.first_name?.message)}\n              helperText={errors.first_name?.message}\n              className={classes.authFormInput}\n              size=\"medium\"\n              variant=\"outlined\"\n              {...field}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"password\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <TextField\n              variant=\"outlined\"\n              label=\"Пароль\"\n              error={Boolean(errors.password?.message)}\n              helperText={errors.password?.message}\n              className={classes.authFormInput}\n              type=\"password\"\n              size=\"medium\"\n              {...field}\n            />\n          )}\n        />\n      </fieldset>\n\n      <Button className={classes.authFormButton} type=\"submit\">\n        Зарегистрироваться\n      </Button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","/* eslint-disable no-console */\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, TextField, Link } from '@material-ui/core';\nimport * as yup from 'yup';\nimport { Options } from 'ky';\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Link as RouterLink } from 'react-router-dom';\nimport useStyles from '../AuthForm/AuthForm.styles';\n\ninterface ResetPasswordProps {\n  children?: React.ReactNode;\n  onSubmit: (data: ResetPasswordFormValues) => Promise<void>;\n}\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Такой e-mail не подойдет').required('Поле e-mail необходимо к заполнению'),\n});\n\nexport interface ResetPasswordFormValues extends Options {\n  email: string;\n}\nconst ResetPassword: React.FC<ResetPasswordProps> = ({ onSubmit }) => {\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm<Pick<ResetPasswordFormValues, 'email'>>({ resolver: yupResolver(schema), mode: 'onTouched' });\n\n  return (\n    <form className={classes.authForm} onSubmit={handleSubmit(onSubmit)}>\n      <fieldset className={classes.authFormInputContainer}>\n        <Controller\n          name=\"email\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <TextField\n              label=\"E-mail\"\n              error={Boolean(errors.email?.message)}\n              helperText={errors.email?.message}\n              className={classes.authFormInput}\n              size=\"medium\"\n              variant=\"outlined\"\n              {...field}\n            />\n          )}\n        />\n      </fieldset>\n      <Link component={RouterLink} to=\"/\">\n        Вернуться на главную\n      </Link>\n      <Button className={classes.authFormButton} type=\"submit\">\n        Отправить\n      </Button>\n    </form>\n  );\n};\n\nexport default ResetPassword;\n","import { ThemeOptions } from '@material-ui/core/styles/createMuiTheme';\n\nexport const themeLight: ThemeOptions = {\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#3f51b5',\n    },\n    secondary: {\n      main:'#f73378',\n    },\n  },\n};\n\nexport const themeDark: ThemeOptions = {\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#44318d',\n    },\n    secondary: {\n      main: '#AB81F1',\n    },\n    background: {\n      default: '#06091F',\n      paper: 'rgba(255,255,255,0.1)',\n    },\n    error: {\n      main: '#F6483D',\n    },\n    divider: 'rgba(255,255,255,0.1)',\n    info: {\n      main: '#AB81F1',\n    },\n    text: {\n      primary: '#ffffff',\n      secondary: '#676C7A',\n      disabled: '#676C7A',\n    },\n  },\n};\n","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\n\nfunction useLocalStorage<T>(key: string, initialValue: T) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue] as const;\n}\n\nexport default useLocalStorage;\n","import { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: '100%',\n    gap: 20,\n    marginTop: 120,\n    paddingRight: '20px',\n  },\n  statusInfo: {\n    position: 'absolute',\n    top: 70,\n  },\n  authFormButton: {\n    cursor: 'pointer',\n    top: '8px',\n    right: '12px',\n    width: '120px',\n    minHeight: '44px',\n    backgroundPosition: 'center',\n    background: theme.palette.secondary.main,\n    border: 'none',\n    padding: '0',\n  },\n\n  quill: {\n    width: '100%',\n    minHeight: '150px',\n    '& a': {\n      color: '#06c!important',\n    },\n    '& span': {\n      color: 'inherit!important',\n    },\n    '& .ql-container': {\n      minHeight: '150px',\n    },\n    '& .ql-fill': {\n      fill: theme.palette.type === 'dark' ? 'white' : 'black',\n      color: theme.palette.type === 'dark' ? 'white' : 'black',\n    },\n    '& .ql-snow': {\n      fill: theme.palette.type === 'dark' ? 'white' : 'black',\n      color: theme.palette.type === 'dark' ? 'white' : 'black',\n    },\n    '& .ql-stroke': {\n      stroke: theme.palette.type === 'dark' ? 'white' : 'black',\n      color: theme.palette.type === 'dark' ? 'white' : 'black',\n    },\n    '& .ql-picker-label': {\n      color: theme.palette.type === 'dark' ? 'white' : 'black',\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { Button, CircularProgress, Collapse, IconButton } from '@material-ui/core';\nimport { Controller, useForm } from 'react-hook-form';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useStyles from './RichTextEditor.style';\n\nexport interface RichTextEditorFormValues {\n  message: string;\n}\nconst modules = {\n  toolbar: [['bold', 'italic', 'underline', 'strike'], ['link']],\n  clipboard: {\n    matchVisual: false,\n  },\n};\n\ninterface RichTextEditorInterface {\n  onSubmit: (data: RichTextEditorFormValues) => Promise<void>;\n}\n\nconst RichTextEditor: React.FC<RichTextEditorInterface> = ({ onSubmit }) => {\n  const classes = useStyles();\n  const { handleSubmit, control } = useForm<RichTextEditorFormValues>();\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        name=\"message\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field }) => (\n          <ReactQuill preserveWhitespace className={classes.quill} modules={modules} theme=\"snow\" {...field} />\n        )}\n      />\n      <Button className={classes.authFormButton} type=\"submit\">\n        Отправить\n      </Button>\n    </form>\n  );\n};\n\nexport default RichTextEditor;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { themeDark } from './test';\n\nconst drawerWidth = 268;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const match = useRouteMatch('/send')?.isExact ?? false;\n  return {\n    root: {\n      background: theme.palette.type === 'light' ? themeDark.palette?.background?.default : '#FFFFF',\n    },\n    content: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflow: 'hidden',\n      marginLeft: '100px',\n      marginTop: '60px',\n      display: 'flex',\n      flexDirection: 'column',\n      width: `calc(100% - 260px)`,\n    },\n    contentShift: {\n      overflow: 'visible',\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      width: match ? `calc(100% - ${drawerWidth}px)` : `calc(100% - ${drawerWidth + 80}px)`,\n      marginLeft: drawerWidth,\n    },\n  };\n});\n\nexport default useStyles;\n","/* eslint-disable no-console */\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, TextField } from '@material-ui/core';\nimport * as yup from 'yup';\nimport { Options } from 'ky';\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport useStyles from '../AuthForm/AuthForm.styles';\n\ninterface InviteProps {\n  children?: React.ReactNode;\n  onSubmit: (data: InviteFormValues) => Promise<void>;\n}\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Такой e-mail не подойдет').required('Поле e-mail необходимо к заполнению'),\n});\n\nexport interface InviteFormValues extends Options {\n  email: string;\n}\nconst Invite: React.FC<InviteProps> = ({ onSubmit }) => {\n  const classes = useStyles();\n\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm<Pick<InviteFormValues, 'email'>>({ resolver: yupResolver(schema), mode: 'onTouched' });\n\n  return (\n    <div className={classes.invite}>\n      <form className={classes.authForm} onSubmit={handleSubmit(onSubmit)}>\n        <fieldset className={classes.authFormInputContainer}>\n          <Controller\n            name=\"email\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <TextField\n                label=\"E-mail\"\n                error={Boolean(errors.email?.message)}\n                helperText={errors.email?.message}\n                className={classes.authFormInput}\n                size=\"medium\"\n                variant=\"outlined\"\n                {...field}\n              />\n            )}\n          />\n        </fieldset>\n        <Button className={classes.authFormButton} type=\"submit\">\n          отправить\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Invite;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\ninterface ProtectedRouteProps {\n  component: React.ReactNode;\n  path: string;\n  condition: boolean | string;\n}\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ component, path, condition }) => {\n  return <Route path={path}>{condition ? component : <Redirect to=\"/\" />}</Route>;\n};\n\nexport default ProtectedRoute;\n","import { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  status: {\n    position: 'absolute',\n    top: 70,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Collapse, IconButton } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useStyles from './StatusLabel.style';\n\ninterface StatusLabelProps {\n  open: boolean;\n  isError: boolean;\n  handleCloseError: () => void;\n  statusMessage: null | string;\n}\n\nconst StatusLabel: React.FC<StatusLabelProps> = ({ open, handleCloseError, isError, statusMessage }) => {\n  const classes = useStyles();\n  return (\n    <Collapse in={open} className={classes.status}>\n      <Alert\n        severity={isError ? 'error' : 'success'}\n        variant=\"outlined\"\n        action={\n          <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={handleCloseError}>\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }>\n        {statusMessage}\n      </Alert>\n    </Collapse>\n  );\n};\n\nexport default StatusLabel;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-console */\nimport { Container, createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Redirect, Route, Switch, useHistory, useLocation, useParams } from 'react-router-dom';\nimport ky from 'ky';\nimport AuthForm, { LoginFormValues } from './pages/AuthForm/AuthForm';\nimport Header from './components/Header/Header';\nimport Dashboard, { UserData } from './pages/Dashboard/Dashboard';\nimport RegisterForm, { RegisterFormValues } from './pages/RegisterForm/RegisterForm';\nimport ResetPassword, { ResetPasswordFormValues } from './pages/ResetPassword/ResetPassword';\nimport { themeLight, themeDark } from './test';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport RichTextEditor, { RichTextEditorFormValues } from './pages/RichTextEditor/RichTextEditor';\nimport useStyles from './App.styles';\nimport Invite, { InviteFormValues } from './pages/Invite/Invite';\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\nimport StatusLabel from './components/StatusLabel/StatusLabel';\n\nfunction App() {\n  const [themeColor, setThemeColor] = useLocalStorage<boolean>('theme', true);\n  const [userToken, setUserToken] = useLocalStorage<string | boolean>('user', false);\n  const [refreshToken, setRefreshToken] = useLocalStorage<string | boolean>('refresh_token', false);\n  const removeToken = () => {\n    setUserToken(false);\n    setRefreshToken(false);\n  };\n\n  const [openError, setErrorOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [usersStats, setUsersStats] = useState<UserData | null>(null);\n  const handleCloseError = () => setErrorOpen(false);\n\n  const getRefreshedToken = async () => {\n    try {\n      const responseToken = await fetch(`${process.env.REACT_APP_API_ADDRESS}/auth/token_refresh/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${refreshToken}`,\n        },\n      });\n      setLoading(true);\n      if (responseToken.status === 401) {\n        removeToken();\n      } else {\n        const refreshedToken = await responseToken.json();\n        setUserToken(refreshedToken.token as string);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      setLoading(true);\n      setErrorOpen(false);\n      const response = await fetch(`${process.env.REACT_APP_API_ADDRESS}/analysis/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userToken}`,\n        },\n      });\n\n      if (response.status === 200) {\n        const userData: UserData = (await response.json()) as UserData;\n\n        setUsersStats(userData);\n      } else if (response.status === 401) {\n        getRefreshedToken();\n      } else {\n        const error = await response.json();\n        setError(true);\n        throw new Error(error);\n      }\n    } catch (e: any) {\n      setErrorMessage(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onInvite = async (data: InviteFormValues) => {\n    try {\n      setErrorOpen(false);\n      const response = await fetch(`${process.env.REACT_APP_API_ADDRESS}/auth/invitation/`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n      });\n\n      if (response.status === 200) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const result = await response.json();\n        setErrorOpen(true);\n        setErrorMessage(result.message);\n      } else {\n        const result = await response.json();\n        throw new Error(result);\n      }\n    } catch (e: any) {\n      setError(true);\n      setErrorOpen(true);\n      setErrorMessage(e.message);\n    }\n  };\n  const history = useHistory();\n\n  const onLogin = async (data: LoginFormValues) => {\n    try {\n      setLoading(true);\n      const response = await ky.post(`${process.env.REACT_APP_API_ADDRESS}/auth/login/`, {\n        json: {\n          ...data,\n        },\n        throwHttpErrors: false,\n      });\n\n      if (response.status === 200) {\n        const token: { access_token: string; refresh_token: string } = await response.json();\n        setUserToken(token.access_token);\n        setRefreshToken(token.refresh_token);\n        setError(false);\n        history.push('/dashboard');\n      } else {\n        const error = await response.json();\n        throw new Error(error.message);\n      }\n    } catch (e: any) {\n      setError(true);\n      setErrorOpen(true);\n      setErrorMessage(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onResetPassword = async (data: ResetPasswordFormValues) => {\n    try {\n      setLoading(true);\n      setErrorMessage(null);\n      const response = await fetch(`${process.env.REACT_APP_API_ADDRESS}/auth/password_reset/`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n      });\n\n      if (response.status === 200) {\n        setErrorOpen(true);\n        const result = await response.json();\n        setErrorMessage(result.message);\n      } else {\n        const error = await response.json();\n        throw new Error(error.message);\n      }\n    } catch (e: any) {\n      setError(true);\n      setErrorOpen(true);\n      setErrorMessage(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onSubmitMessage = async (data: RichTextEditorFormValues) => {\n    const stripTags = data.message.replace(/(<p[^>]+?>|<p>)/gim, '');\n    const replaceEnclosedTag = stripTags.replace(/(<br[^>]+?>|<br>|<\\/p>)/gim, '\\n');\n    const normalizedData = { message: replaceEnclosedTag };\n    try {\n      setLoading(true);\n      setErrorMessage(null);\n      const response = await ky.post(`${process.env.REACT_APP_API_ADDRESS}/send_telegram_notification/`, {\n        json: {\n          ...normalizedData,\n        },\n        retry: {\n          limit: 1,\n          methods: ['post'],\n          statusCodes: [401],\n        },\n        throwHttpErrors: false,\n        headers: {\n          Authorization: `Bearer ${userToken}`,\n        },\n        hooks: {\n          afterResponse: [\n            // eslint-disable-next-line consistent-return\n            async (request, options, resp) => {\n              if (resp.status === 401) {\n                // Get a fresh token\n                const token = await ky.post(`${process.env.REACT_APP_API_ADDRESS}/auth/token_refresh/`, {\n                  headers: {\n                    Authorization: `Bearer ${refreshToken}`,\n                  },\n                });\n\n                // Retry with the token\n                request.headers.set('Authorization', `Bearer ${token}`);\n                return ky(request);\n              }\n            },\n          ],\n        },\n      });\n      if (response.status === 200) {\n        setErrorOpen(true);\n        setError(false);\n        const result = await response.json();\n        setErrorMessage(result.result);\n      } else {\n        const error = await response.json();\n        throw new Error(error.message);\n      }\n    } catch (e: any) {\n      setError(true);\n      setErrorOpen(true);\n      setErrorMessage(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onRegister = async (data: RegisterFormValues, params: { id: string }) => {\n    try {\n      setLoading(true);\n      const response = await ky.post(`${process.env.REACT_APP_API_ADDRESS}/auth/register/`, {\n        json: {\n          ...data,\n          token: params.id,\n        },\n        throwHttpErrors: false,\n      });\n\n      if (response.status === 200) {\n        setError(false);\n        history.push('/');\n      } else {\n        const error = await response.json();\n        throw new Error(error.message);\n      }\n    } catch (e: any) {\n      setError(true);\n      setErrorOpen(true);\n      setErrorMessage(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSetTheme = () => {\n    setThemeColor(!themeColor);\n  };\n\n  const [isMenuOpen, setMenuOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setMenuOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setMenuOpen(false);\n  };\n  const classes = useStyles();\n  useEffect(() => {\n    const handleSetThemeLocal = () => {\n      setThemeColor(themeColor);\n    };\n    if (localStorage.getItem('theme') === null) {\n      handleSetThemeLocal();\n    }\n  }, [setThemeColor, themeColor]);\n  const theme = themeColor ? themeDark : themeLight;\n\n  const themeOptions = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          ...theme.palette,\n        },\n        overrides: {\n          MuiFormHelperText: {\n            root: {\n              position: 'absolute',\n              bottom: '-19px',\n              whiteSpace: 'nowrap',\n              margin: 0,\n              textAlign: 'left',\n            },\n            contained: {\n              marginLeft: '0',\n              marginRight: 0,\n            },\n          },\n          MuiOutlinedInput: {\n            input: {\n              '&:-webkit-autofill': {\n                transitionDelay: '9999s',\n                '-webkit-text-fill-color': themeColor ? '#fff' : 'black',\n              },\n            },\n            notchedOutline: {\n              borderColor: themeColor ? 'rgba(0, 0, 0, 0.7)' : 'rgba(255, 255, 255, 0.2)',\n            },\n          },\n          MuiButton: {\n            root: {\n              cursor: 'pointer',\n              width: '120px',\n              minHeight: '44px',\n              backgroundPosition: 'center',\n              border: 'none',\n              padding: '0',\n              '&:hover': {\n                backgroundColor: !themeColor ? '#f50057' : '#8852E1',\n              },\n            },\n          },\n          MuiSvgIcon: {\n            root: {\n              fill: themeColor ? 'white' : 'black',\n            },\n          },\n          MuiTextField: {\n            root: {\n              '&:hover': {\n                borderColor: '#8852E1',\n              },\n            },\n          },\n          MuiContainer: {\n            root: {\n              width: '100%',\n              maxWidth: '100%',\n              paddingLeft: 0,\n              paddingRight: 0,\n              marginLeft: 0,\n              marginRight: 0,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              '@media (min-width: 600px)': {\n                paddingLeft: 0,\n                paddingRight: 0,\n              },\n            },\n            maxWidthLg: {\n              width: '100%',\n              maxWidth: '100%',\n              '@media (min-width: 1280px)': {\n                width: '100%',\n                maxWidth: '100%',\n              },\n            },\n          },\n          MuiCssBaseline: {\n            '@global': {\n              body: {\n                overflow: 'hidden',\n                backgroundColor: themeColor ? '#06091F' : '#F8FAFD',\n              },\n            },\n          },\n        },\n      }),\n    [theme.palette, themeColor],\n  );\n\n  return (\n    <ThemeProvider theme={themeOptions}>\n      <CssBaseline />\n      <Container>\n        <Header\n          isDark={themeColor}\n          removeToken={removeToken}\n          handleSetTheme={handleSetTheme}\n          isMenuOpen={isMenuOpen}\n          handleDrawerOpen={handleDrawerOpen}\n          handleDrawerClose={handleDrawerClose}\n        />\n        <StatusLabel\n          isError={isError}\n          statusMessage={errorMessage}\n          open={openError}\n          handleCloseError={handleCloseError}\n        />\n        <Switch>\n          <Route exact path=\"/\">\n            {!userToken ? <AuthForm onLogin={onLogin} /> : <Redirect to=\"/dashboard\" />}\n          </Route>\n\n          <ProtectedRoute\n            condition={userToken}\n            component={\n              <main\n                className={clsx(classes.content, {\n                  [classes.contentShift]: isMenuOpen,\n                })}>\n                <Dashboard userStats={usersStats} fetchUserStats={getUsers} />\n              </main>\n            }\n            path=\"/dashboard\"\n          />\n          <ProtectedRoute\n            condition={userToken}\n            component={\n              <main\n                className={clsx(classes.content, {\n                  [classes.contentShift]: isMenuOpen,\n                })}>\n                <RichTextEditor onSubmit={onSubmitMessage} />\n              </main>\n            }\n            path=\"/send\"\n          />\n          {/* <ProtectedRoute\n            condition={userToken}\n            component={\n              <main\n                className={clsx(classes.content, {\n                  [classes.contentShift]: isMenuOpen,\n                })}>\n                <Invite />\n              </main>\n            }\n            path=\"/invite\"\n          /> */}\n          <Route path=\"/invite\">\n            <main\n              className={clsx(classes.content, {\n                [classes.contentShift]: isMenuOpen,\n              })}>\n              <Invite onSubmit={onInvite} />\n            </main>\n          </Route>\n\n          <Route path=\"/register/:id\">\n            <RegisterForm onSubmit={onRegister} />\n          </Route>\n          <Route path=\"/reset_password\">\n            <ResetPassword onSubmit={onResetPassword} />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}